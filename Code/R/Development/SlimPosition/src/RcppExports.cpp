// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppEigen.h>
#include <Rcpp.h>

using namespace Rcpp;

// tolerance_svd
Rcpp::List tolerance_svd(Eigen::MatrixXd m, double tol, int k);
RcppExport SEXP _SlimPosition_tolerance_svd(SEXP mSEXP, SEXP tolSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(tolerance_svd(m, tol, k));
    return rcpp_result_gen;
END_RCPP
}
// matrix_power
Eigen::MatrixXd matrix_power(Eigen::MatrixXd m, double power, double tol, int k);
RcppExport SEXP _SlimPosition_matrix_power(SEXP mSEXP, SEXP powerSEXP, SEXP tolSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type m(mSEXP);
    Rcpp::traits::input_parameter< double >::type power(powerSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(matrix_power(m, power, tol, k));
    return rcpp_result_gen;
END_RCPP
}
// gsvd_eig
List gsvd_eig(Eigen::MatrixXd data, Eigen::MatrixXd left_weights, Eigen::MatrixXd right_weights, double tol, int nv, int k);
RcppExport SEXP _SlimPosition_gsvd_eig(SEXP dataSEXP, SEXP left_weightsSEXP, SEXP right_weightsSEXP, SEXP tolSEXP, SEXP nvSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type data(dataSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type left_weights(left_weightsSEXP);
    Rcpp::traits::input_parameter< Eigen::MatrixXd >::type right_weights(right_weightsSEXP);
    Rcpp::traits::input_parameter< double >::type tol(tolSEXP);
    Rcpp::traits::input_parameter< int >::type nv(nvSEXP);
    Rcpp::traits::input_parameter< int >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(gsvd_eig(data, left_weights, right_weights, tol, nv, k));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_SlimPosition_tolerance_svd", (DL_FUNC) &_SlimPosition_tolerance_svd, 3},
    {"_SlimPosition_matrix_power", (DL_FUNC) &_SlimPosition_matrix_power, 4},
    {"_SlimPosition_gsvd_eig", (DL_FUNC) &_SlimPosition_gsvd_eig, 6},
    {NULL, NULL, 0}
};

RcppExport void R_init_SlimPosition(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
